ggplot(zad2, aes(x=zipcode, y=price)) +
geom_boxplot() +
facet_wrap(yr_built~grade)
ggplot(zad2, aes(x=zipcode, y=price)) +
geom_boxplot() +
facet_grid(yr_built~grade)
ggplot(zad2, aes(x=zipcode, y=price)) +
geom_boxplot() +
facet_grid(grade~yr_built)
ggplot(zad2, aes(x=as.factor(zipcode), y=price)) +
geom_boxplot() +
facet_grid(grade~yr_built)
ggplot(zad2, aes(x=as.factor(zipcode), y=price)) +
geom_boxplot() +
facet_grid(grade~yr_built) +
labs(
x="Zipcode",
y="Price [1k $]"
)
quantile(df$zipcode)
zad2 <- df %>%
select(yr_built, price, grade, zipcode) %>%
mutate(price = price/1000,) %>%
filter(grade %in% c(8,9) & yr_built %in% c(2013, 2014)) %>%
group_by(zipcode) %>%
summarise(count = n())
zad2 <- df %>%
select(yr_built, price, grade, zipcode) %>%
mutate(price = price/1000,) %>%
filter(grade %in% c(8,9) & yr_built %in% c(2013, 2014)) %>%
zipcodes <- df %>%
group_by(zipcode) %>%
summarise(count = n())
zipcodes <- df %>%
group_by(zipcode) %>%
summarise(count = n())
zipcodes <- df %>%
group_by(zipcode) %>%
summarise(count = n()) %>%
arrange(-count) %>%
head(4)
View(zipcodes)
zipcodes <- df %>%
group_by(zipcode) %>%
summarise(count = n()) %>%
arrange(-count) %>%
head(0.05)
zipcodes <- df %>%
group_by(zipcode) %>%
summarise(count = n()) %>%
arrange(-count) %>%
head(4)
zipcodes <- df %>%
group_by(zipcode) %>%
summarise(count = n()) %>%
filter(count > quantile(count, 0.95))
zad2 <- df %>%
select(yr_built, price, grade, zipcode) %>%
mutate(price = price/1000,) %>%
filter(grade %in% c(8,9) & yr_built %in% c(2013, 2014)) %>%
filter(zipcode %in% unique(zipcodes$zipcode))
zipcodes <- df %>%
group_by(zipcode) %>%
summarise(count = n()) %>%
filter(count > quantile(count, 0.95))
ggplot(zad2, aes(x=as.factor(zipcode), y=price)) +
geom_boxplot() +
facet_grid(grade~yr_built) +
labs(
x="Zipcode",
y="Price [1k $]"
)
ggplot(zad2, aes(x=as.factor(zipcode), y=price)) +
geom_boxplot() +
facet_grid(grade~yr_built, ) +
labs(
x="Zipcode",
y="Price [1k $]"
) +
theme(strip.background =  = element_rect(fill  = "blue"))
ggplot(zad2, aes(x=as.factor(zipcode), y=price)) +
geom_boxplot() +
facet_grid(grade~yr_built, ) +
labs(
x="Zipcode",
y="Price [1k $]"
) +
theme(strip.background = element_rect(fill  = "blue"))
ggplot(zad2, aes(x=as.factor(zipcode), y=price)) +
geom_boxplot() +
facet_grid(grade~yr_built, ) +
labs(
x="Zipcode",
y="Price [1k $]"
) +
theme(strip.background = element_rect(fill  = "blue2"))
ggplot(zad2, aes(x=as.factor(zipcode), y=price)) +
geom_boxplot() +
facet_grid(grade~yr_built, ) +
labs(
x="Zipcode",
y="Price [1k $]"
) +
theme(strip.background = element_rect(fill  = "darkblue"))
ggplot(zad2, aes(x=as.factor(zipcode), y=price)) +
geom_boxplot() +
facet_grid(grade~yr_built, ) +
labs(
x="Zipcode",
y="Price [1k $]"
) +
theme(strip.background = element_rect(fill  = "darkblue"),
strip.text = element_text(color = "white"))
ggplot(zad2, aes(x=as.factor(zipcode), y=price)) +
geom_boxplot() +
facet_grid(grade~yr_built, ) +
labs(
x="Zipcode",
y="Price [1k $]"
) +
theme(strip.background = element_rect(fill  = "darkblue"),
strip.text = element_text(color = "white"))+
theme_bw()
ggplot(zad2, aes(x=as.factor(zipcode), y=price)) +
geom_boxplot() +
facet_grid(grade~yr_built, ) +
labs(
x="Zipcode",
y="Price [1k $]"
) +
theme_bw() +
theme(strip.background = element_rect(fill  = "darkblue"),
strip.text = element_text(color = "white"))
ggplot(zad2, aes(x=as.factor(zipcode), y=price)) +
geom_boxplot() +
facet_grid(grade~yr_built, ) +
labs(
x="Zipcode",
y="Price [1k $]"
) +
theme_bw() +
theme(strip.background = element_rect(fill  = "darkblue"),
strip.text = element_text(color = "white", face = "bold", size=10))
p1 <- ggplot(zad1, aes(x=price,
y=as.factor(sqft_living),
color=as.factor(waterfront))) +
geom_boxplot() +
labs(
x = "Price [1k $]",
y = "Living area [sqft]",
color = "Waterfront")
p2 <- ggplot(zad2, aes(x=as.factor(zipcode), y=price)) +
geom_boxplot() +
facet_grid(grade~yr_built, ) +
labs(
x="Zipcode",
y="Price [1k $]"
) +
theme_bw() +
theme(strip.background = element_rect(fill  = "darkblue"),
strip.text = element_text(color = "white", face = "bold", size=10))
install.packages("patchwork")
install.packages("grid")
install.packages("gridExtra")
library(patchwork)
install.packages("grid")
p2 + p1
p1 + p2
p1/p2
(p1 | p2 | p1) / p2
p1^p1
p1 + grid::textGrob('JakiÅ› tekst')
p1 + grid::textGrob('Pudzian')
zad3 <- zad2 %>%
group_by(zipcode, yr_built) %>%
summarise(n = n())
View(zad3)
zad3 <- zad2 %>%
group_by(zipcode, yr_built) %>%
summarise(n = n()) %>%
pivot_wider(zipcode, names_from = yr_built, values_from = n)
library(tidyr)
zad3 <- zad2 %>%
group_by(zipcode, yr_built) %>%
summarise(n = n()) %>%
pivot_wider(zipcode, names_from = yr_built, values_from = n)
zad3 <- zad2 %>%
group_by(zipcode, yr_built) %>%
summarise(n = n()) %>%
pivot_wider(zipcode, names_from = yr_built, values_from = n)
zad3 <- zad2 %>%
group_by(zipcode, yr_built) %>%
summarise(n = n()) %>%
pivot_wider(names_from = yr_built, values_from = n)
library(tinder)
install.packages("tinder")
?tinder
??tinder
p2 + zad3
p2 + gridExtra::tableGrob(zad3)
(p1 + p2) & theme_gray()
(p1 / p2) + plot_layout(heights = c(3,1))
plot_annotation(title = "title",
caption = Sys.time())
(p1 / p2) + plot_annotation(title = "title",
caption = Sys.time())
(p1 / p2) + plot_layout(heights = c(3,1),
guides = "collet")
(p1 / p2) + plot_layout(heights = c(3,1),
guides = "collect")
ggplot(countries, aes(x=birth.rate,
y=death.rate,
color=continent)) +
geom_point()
w1 <-  ggplot(countries, aes(x = death.rate, fill= continent)) +
geom_density()
ggplot(countries, aes(x = death.rate, fill= continent)) +
geom_density()
w2 <- ggplot(countries, aes(x = birth.rate, fill= continent)) +
geom_density()
ggplot(countries, aes(x = birth.rate, fill= continent)) +
geom_density()
ggplot(countries, aes(x = birth.rate, fill= continent)) +
geom_density(alpha(0.6))
w2 <- ggplot(countries, aes(x = birth.rate, fill= continent)) +
geom_density(alpha() = 0.6)
ggplot(countries, aes(x = birth.rate, fill= continent)) +
geom_density() +
theme(legend = element_blank())
w1 <-  ggplot(countries, aes(y = death.rate, fill= continent)) +
geom_density()
(w1 + w3) / w2
w3 <- ggplot(countries, aes(x=birth.rate,
y=death.rate,
color=continent)) +
geom_point()
w1 <-  ggplot(countries, aes(y = death.rate, fill= continent)) +
geom_density()
w2 <- ggplot(countries, aes(x = birth.rate, fill= continent)) +
geom_density()
(w1 + w3) / w2
w3 <- ggplot(countries, aes(x=birth.rate,
y=death.rate,
color=continent)) +
geom_point() +
theme(legend.position = "none")
w1 <-  ggplot(countries, aes(y = death.rate, fill= continent)) +
geom_density() +
theme(legend.position = "none")
w2 <- ggplot(countries, aes(x = birth.rate, fill= continent)) +
geom_density()
(w1 + w3) / w2
w2 <- ggplot(countries, aes(x = birth.rate, fill= continent)) +
geom_density()+
theme(legend.position = "left")
(w1 + w3) / w2
w1 <-  ggplot(countries, aes(y = death.rate, fill= continent)) +
geom_density(alpha = 0.4) +
theme(legend.position = "none")
w2 <- ggplot(countries, aes(x = birth.rate, fill= continent)) +
geom_density(alpha = 0.4)+
theme(legend.position = "left")
(w1 + w3) / w2
w2 <- ggplot(countries, aes(x = birth.rate, fill= continent)) +
geom_density(alpha = 0.4)+
theme(legend.position = "left") +
theme(legend.position = "none")
w2 <- ggplot(countries, aes(x = birth.rate, fill= continent)) +
geom_density(alpha = 0.4) +
theme(legend.position = "none")
(w1 + w3) / w2
w2 <- ggplot(countries, aes(x = birth.rate, fill= continent)) +
geom_density(alpha = 0.4) +
theme(legend.position = "none") +
scale_y_reverse()
(w1 + w3) / w2
w1 <-  ggplot(countries, aes(y = death.rate, fill= continent)) +
geom_density(alpha = 0.4) +
theme(legend.position = "none") +
scale_x_reverse()
w2 <- ggplot(countries, aes(x = birth.rate, fill= continent)) +
geom_density(alpha = 0.4) +
theme(legend.position = "none") +
scale_y_reverse()
(w1 + w3) / w2
library(dplyr)
test <- read.csv("C:\Users\barte\Downloads\Formularz bez nazwy (Responses) - Form Responses 1.csv")
test <- read.csv("C:\Users\barte\Downloads\ankieta.csv")
test <- read.csv("ankieta.csv")
library(dplyr)
test <- read.csv("test")
test <- read.csv("test.csv")
library(dplyr)
library(ggplot2)
meat_consumption <- read.csv("faostat/FoodBalanceSheets_E_All_Data_(Normalized).csv")
library(dplyr)
library(ggplot2)
meat_consumption <- read.csv("FoodBalanceSheets_E_All_Data_(Normalized).csv")
library(dplyr)
library(ggplot2)
meat_consumption <- read.csv("FoodBalanceSheets_E_All_Data_(Normalized).csv")
library(dplyr)
shiny::runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
library(ggplot2)
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
# draw the histogram with the specified number of bins
# hist(x, breaks = bins, col = 'darkgray', border = 'white',
#      xlab = 'Waiting time to next eruption (in mins)',
#      main = 'Histogram of waiting times')
view(faithful)
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
library(SmarterPoland)
library(PogromcyDanych)
View(PogromcyDanych::serialeIMDB)
library(PogromcyDanych)
install.packages("PogromcyDancyh")
install.packages("PogromcyDanych")
library(PogromcyDanych)
View(PogromcyDanych::serialeIMDB)
seriale <- PogromcyDanych::serialeIMDB
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
seriale <- serialeIMDB
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
?selectInput
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
library(PogromcyDanych)
seriale <- serialeIMDB
ggplot(seriale, aes(x = input$select, y = ocena)) +
geom_boxplot()
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
type(unique(seriale$serial)[1])
type(unique(seriale$serial))
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
library(dplyr)
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
?chceckboxInput
?chceckboxInput
??chceckboxInput
?checkboxInput
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
?geom_smooth
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
?textOutput
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
shiny::runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab8/lab8')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/MN/laby/lab9/app_start.R')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/MN/laby/lab9/app_start.R')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/MN/laby/lab9/app_start.R')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/MN/laby/lab9/app_start.R')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/MN/laby/lab9/app_start.R')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/MN/laby/lab9/app_start.R')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/MN/laby/lab9/app_start.R')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/MN/laby/lab9/app_start.R')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/MN/laby/lab9/app_start.R')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/MN/laby/lab9/app_start.R')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/MN/laby/lab9/app_start.R')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/MN/laby/lab9/app_start.R')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/MN/laby/lab9/app_start.R')
?checkboxGroupInput
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/MN/laby/lab9/app_start.R')
install.packages('shinyjqui')
library(shiny); source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
install.packages('shinyjqui')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
library(shinyjqui)
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
source('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/lab10/lab10.R')
library(spotifyr)
library(tidyverse)
Sys.setenv(SPOTIFY_CLIENT_ID = '5babb1e9a2ed4715a9474d6da197f6c1')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '94c9e25f7573405098af744aa0dd7cb4')
access_token <- get_spotify_access_token()
library(dplyr)
library(stringr)
library(jsonlite)
artists <- unique(test$artistName)
test <- rbind(dd1, dd2)
d1 <- fromJSON("dane2/SpotifyDanedanonek1/SpotifyAccountData/StreamingHistory0.json")
library(spotifyr)
library(tidyverse)
library(dplyr)
library(stringr)
library(jsonlite
library(spotifyr)
library(tidyverse)
library(dplyr)
library(stringr)
library(jsonlite)
Sys.setenv(SPOTIFY_CLIENT_ID = 'e43c48f3a8644037b590cae010773a47')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'ce90659966d54bb5a735f49a9819dc2a')
access_token <- get_spotify_access_token()
get_artist_audio_features("Ludwig van Beethoven")
library(shiny); runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/TWDDD/TWD-Projekt-JA/KOD/PROJECT.R')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/TWDDD/TWD-Projekt-JA/KOD/PROJECT.R')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/TWDDD/TWD-Projekt-JA/KOD/PROJECT.R')
artists <- SH %>%
select(master_metadata_album_artist_name, master_metadata_track_name, ms_played, person) %>%
group_by(master_metadata_album_artist_name, person) %>%
summarise(time = sum(ms_played / 60000),
.groups = "keep") %>%
na.omit()
SH <- fromJSON("../dane/SpotifyExtendedAll.json")
artists <- SH %>%
select(master_metadata_album_artist_name, master_metadata_track_name, ms_played, person) %>%
group_by(master_metadata_album_artist_name, person) %>%
summarise(time = sum(ms_played / 60000),
.groups = "keep") %>%
na.omit()
library(jsonlite)
SH <- fromJSON("../dane/SpotifyExtendedAll.json")
SH <- fromJSON("../dane/SpotifyExtendedAll.json")
getwd()
SH <- fromJSON("../dane/SpotifyExtendedAll.json")
library(dplyr)
library(ggplot2)
library(shinydashboard)
library(shiny)
library(shinycssloaders)
library(plotly)
library(lubridate)
library(spotifyr)
library(tidyr)
library(shinyWidgets)
library(shinyjs)
library(jsonlite)
library(fmsb)
library(cowplot)
library(extrafont)
library(showtext)
SH <- fromJSON("../dane/SpotifyExtendedAll.json")
SH <- fromJSON("../dane/SpotifyExtendedAll.json")
SH <- fromJSON("../dane/SpotifyExtendedAll.json")
library(jsonlite)
SH <- fromJSON("../dane/SpotifyExtendedAll.json")
SH <- fromJSON("./dane/SpotifyExtendedAll.json")
SH <- fromJSON("../dane/SpotifyExtendedAll.json")
SH <- fromJSON("../dane/SpotifyExtendedAll.json")
library(dplyr)
library(ggplot2)
library(shinydashboard)
library(shiny)
library(shinycssloaders)
library(plotly)
library(lubridate)
library(spotifyr)
library(tidyr)
library(shinyWidgets)
library(shinyjs)
library(jsonlite)
library(fmsb)
library(cowplot)
library(extrafont)
library(showtext)
Songs <- fromJSON("../dane/Songs.json")
shiny::runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/TWDDD/TWD-Projekt-JA')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/TWDDD/TWD-Projekt-JA')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/TWDDD/TWD-Projekt-JA')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/TWDDD/TWD-Projekt-JA')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/TWDDD/TWD-Projekt-JA')
shiny::runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/TWDDD/TWD-Projekt-JA')
runApp('C:/Users/barte/OneDrive/Pulpit/studia/SEM3/TWD/TWDDD/TWD-Projekt-JA')
shiny::runApp()
